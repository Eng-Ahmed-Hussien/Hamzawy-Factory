generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
enum Role {
  USER
  ADMIN
}
model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String   @unique
  password  String
  role      Role     @default(USER)
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  transactions InventoryTransaction[]
}

model Category {
  id          Int       @id @default(autoincrement())
  sku         String    @unique     // الكود
  name        String    @unique     // الاسم
  minQuantity Int       @default(0) // الحد الأدنى
  products    Product[]
}

model Product {
  id          Int       @id @default(autoincrement())
  sku         String
  name        String
  categoryId  Int
  category    Category  @relation(fields: [categoryId], references: [id])

  incoming    Int       @default(0) // الوارد
  outgoing    Int       @default(0) // الصادر
  production  Int       @default(0) // التصنيع
  stock       Int       @default(0) // المخزن

  costPrice   Float     @default(0) // سعر الشراء
  salePrice   Float     @default(0) // سعر البيع

  // إجماليات للحسابات
  totalCost   Float     @default(0) // اجمالي اسعار الشراء
  totalSales  Float     @default(0) // اجمالي اسعار البيع

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  notes       String?
  
  transactions InventoryTransaction[]
}



model Supplier {
  id        Int       @id @default(autoincrement())
  name      String
  phone     String?
  email     String?
  address   String?
 invoices  Invoice[]   // ربط المورد بالفواتير
}

model Invoice {
  id          Int       @id @default(autoincrement())
  supplierId  Int
  amount      Float
  date        DateTime  @default(now())
  notes       String?

  supplier    Supplier  @relation(fields: [supplierId], references: [id])
}
model Client {
  id        Int       @id @default(autoincrement())
  name      String
  phone     String?
  email     String?
  address   String?
}

model InventoryTransaction {
  id        Int      @id @default(autoincrement())
  type      String   // "IN" | "OUT"
  quantity  Int
  createdAt DateTime @default(now())
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}
